{"version":3,"sources":["../../src/routers/user.js"],"names":["express","require","User","Auth","router","Router","post","req","res","user","body","generateJWT","token","setIp","save","status","send","console","log","findByCredentials","email","password","tokens","filter","get","find","users","e","_id","params","id","findById","patch","updates","Object","keys","allowedUpdates","isValidOperation","every","update","includes","error","forEach","delete","findByIdAndDelete","module","exports"],"mappings":"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","file":"user.js","sourcesContent":["const express = require('express')\nconst User = require('../models/user')\nconst Auth = require('../middleware/auth')\nconst router = new express.Router()\n\nrouter.post('/users', async (req, res) => {\n    const user = new User(req.body)\n    \n    try {\n        const token = await user.generateJWT()\n        await user.setIp(req)\n        await user.save()\n        res.status(201).send({user, token})\n        \n    } catch (e) {\n        console.log(e)\n        res.status(400).send(e)\n    }\n})\n\nrouter.post('/users/login', async (req, res) => {\n    \n\n    try {\n        const user = await User.findByCredentials(req.body.email, req.body.password)\n        const token = await user.generateJWT()\n        res.send({user, token})\n    } catch (e) {\n        console.log(e)\n        res.status(400).send()\n    }\n})\nrouter.post('/users/logout',Auth , async (req, res) => {\n    try {  \n        req.user.tokens = req.user.tokens.filter((token) =>{\n            return token.token !== req.token\n        })\n        await req.user.save()\n        res.send()\n    } catch (e) {\n        res.status(500).send()\n    }\n})\nrouter.post('/users/logoutAll',Auth , async (req, res) => {\n    try {  \n        req.user.tokens = []\n        await req.user.save()\n        res.send()\n    } catch (e) {\n        res.status(500).send()\n    }\n})\n\nrouter.get('/users', Auth, async (req, res) => {\n    try {\n        const users = await User.find({})\n        res.send(users)\n    } catch (e) {\n        res.status(500).send()\n    }\n})\nrouter.get('/users/me', Auth, async (req, res) => {\n    try {\n        res.send(req.user)\n    } catch (e) {\n        res.status(500).send()\n    }\n})\n\nrouter.get('/users/:id',Auth , async (req, res) => {\n    const _id = req.params.id\n\n    try {\n        const user = await User.findById(_id)\n\n        if (!user) {\n            return res.status(404).send()\n        }\n\n        res.send(user)\n    } catch (e) {\n        res.status(500).send()\n    }\n})\n\nrouter.patch('/users/:id',Auth , async (req, res) => {\n    const updates = Object.keys(req.body)\n    const allowedUpdates = ['name', 'email', 'password', 'age']\n    const isValidOperation = updates.every((update) => allowedUpdates.includes(update))\n\n    if (!isValidOperation) {\n        return res.status(400).send({ error: 'Invalid updates!' })\n    }\n\n    try {\n        const user = await User.findById(req.params.id)\n        updates.forEach((update) => user[update] = req.body[update])\n        await user.save()\n        //const user = await User.findByIdAndUpdate(req.params.id, req.body, { new: true, runValidators: true })\n\n        if (!user) {\n            return res.status(404).send()\n        }\n\n        res.send(user)\n    } catch (e) {\n        res.status(400).send(e)\n    }\n})\n\nrouter.delete('/users/:id', Auth,async (req, res) => {\n    try {\n        const user = await User.findByIdAndDelete(req.params.id)\n\n        if (!user) {\n            return res.status(404).send()\n        }\n\n        res.send(user)\n    } catch (e) {\n        res.status(500).send()\n    }\n})\n\nmodule.exports = router"]}